Grammar

    0 $accept: function $end

    1 function: function_header variable_declarations body
    2         | error ';'

    3 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';'
    4                | error ';'

    5 parameters: parameter
    6           | parameter ',' parameters
    7           | ε

    8 parameter: IDENTIFIER ':' type

    9 variable_declarations: variable variable_declarations
   10                      | error ';'
   11                      | ε

   12 type: INTEGER
   13     | CHARACTER
   14     | REAL

   15 variable: IDENTIFIER ':' type IS statement ';'
   16         | IDENTIFIER ':' LIST OF type IS list ';'

   17 list: '(' expressions ')'

   18 expressions: expressions ',' expression
   19            | expression

   20 body: BEGIN_ statement_ END ';'

   21 statement_: statement ';'
   22           | error ';'

   23 statement: expression
   24          | WHEN condition ',' expression ':' expression
   25          | WHEN error ';'
   26          | SWITCH expression IS case OTHERS ARROW statement ';' ENDSWITCH
   27          | SWITCH expression IS error ENDSWITCH
   28          | IF condition THEN statement ';' ELSIF_declaration ELSE statement ';' ENDIF
   29          | FOLD direction operator list_choice ENDFOLD

   30 ELSIF_declaration: ELSIF condition THEN statement ';' ELSIF_declaration
   31                  | ε

   32 direction: LEFT
   33          | RIGHT

   34 operator: ADDOP
   35         | MULOP
   36         | SUBOP

   37 list_choice: list
   38            | IDENTIFIER

   39 case: CASE INT_LITERAL ARROW statement ';'
   40     | ε
   41     | CASE error ';'

   42 condition: condition OROP and_condition
   43          | and_condition

   44 and_condition: and_condition ANDOP not_condition
   45              | not_condition

   46 not_condition: NOTOP not_condition
   47              | relation

   48 relation: '(' condition ')'
   49         | expression RELOP expression

   50 expression: expression ADDOP term
   51           | expression SUBOP term
   52           | term

   53 term: term MULOP power
   54     | term DIVOP power
   55     | term MODOP power
   56     | power

   57 power: power EXPOP unary
   58      | unary

   59 unary: SUBOP unary
   60      | primary

   61 primary: NEGOP primary
   62        | INT_LITERAL
   63        | CHAR_LITERAL
   64        | REAL_LITERAL
   65        | IDENTIFIER '(' expression ')'
   66        | IDENTIFIER
   67        | '(' expressions ')'


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 17 48 65 67
    ')' (41) 17 48 65 67
    ',' (44) 6 18 24
    ':' (58) 8 15 16 24
    ';' (59) 2 3 4 10 15 16 20 21 22 25 26 28 30 39 41
    error (256) 2 4 10 22 25 27 41
    IDENTIFIER (258) 3 8 15 16 38 65 66
    INT_LITERAL (259) 39 62
    CHAR_LITERAL (260) 63
    REAL_LITERAL (261) 64
    REAL (262) 14
    ADDOP (263) 34 50
    MULOP (264) 35 53
    ANDOP (265) 44
    RELOP (266) 49
    ARROW (267) 26 39
    EXPOP (268) 57
    OROP (269) 42
    NOTOP (270) 46
    MODOP (271) 55
    NEGOP (272) 61
    DIVOP (273) 54
    SUBOP (274) 36 51 59
    BEGIN_ (275) 20
    CASE (276) 39 41
    CHARACTER (277) 13
    ELSE (278) 28
    END (279) 20
    ENDSWITCH (280) 26 27
    FUNCTION (281) 3
    INTEGER (282) 12
    IS (283) 15 16 26 27
    LIST (284) 16
    OF (285) 16
    OTHERS (286) 26
    RETURNS (287) 3
    SWITCH (288) 26 27
    WHEN (289) 24 25
    IF (290) 28
    THEN (291) 28 30
    ELSIF (292) 30
    FOLD (293) 29
    ENDFOLD (294) 29
    LEFT (295) 32
    RIGHT (296) 33
    ENDIF (297) 28


Nonterminals, with rules where they appear

    $accept (48)
        on left: 0
    function (49)
        on left: 1 2
        on right: 0
    function_header (50)
        on left: 3 4
        on right: 1
    parameters (51)
        on left: 5 6 7
        on right: 3 6
    parameter (52)
        on left: 8
        on right: 5 6
    variable_declarations (53)
        on left: 9 10 11
        on right: 1 9
    type (54)
        on left: 12 13 14
        on right: 3 8 15 16
    variable (55)
        on left: 15 16
        on right: 9
    list (56)
        on left: 17
        on right: 16 37
    expressions (57)
        on left: 18 19
        on right: 17 18 67
    body (58)
        on left: 20
        on right: 1
    statement_ (59)
        on left: 21 22
        on right: 20
    statement (60)
        on left: 23 24 25 26 27 28 29
        on right: 15 21 26 28 30 39
    ELSIF_declaration (61)
        on left: 30 31
        on right: 28 30
    direction (62)
        on left: 32 33
        on right: 29
    operator (63)
        on left: 34 35 36
        on right: 29
    list_choice (64)
        on left: 37 38
        on right: 29
    case (65)
        on left: 39 40 41
        on right: 26
    condition (66)
        on left: 42 43
        on right: 24 28 30 42 48
    and_condition (67)
        on left: 44 45
        on right: 42 43 44
    not_condition (68)
        on left: 46 47
        on right: 44 45 46
    relation (69)
        on left: 48 49
        on right: 47
    expression (70)
        on left: 50 51 52
        on right: 18 19 23 24 26 27 49 50 51 65
    term (71)
        on left: 53 54 55 56
        on right: 50 51 52 53 54 55
    power (72)
        on left: 57 58
        on right: 53 54 55 56 57
    unary (73)
        on left: 59 60
        on right: 57 58 59
    primary (74)
        on left: 61 62 63 64 65 66 67
        on right: 60 61


State 0

    0 $accept: • function $end

    error     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    function         go to state 3
    function_header  go to state 4


State 1

    2 function: error • ';'
    4 function_header: error • ';'

    ';'  shift, and go to state 5


State 2

    3 function_header: FUNCTION • IDENTIFIER parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 6


State 3

    0 $accept: function • $end

    $end  shift, and go to state 7


State 4

    1 function: function_header • variable_declarations body

    error       shift, and go to state 8
    IDENTIFIER  shift, and go to state 9

    BEGIN_  reduce using rule 11 (variable_declarations)

    variable_declarations  go to state 10
    variable               go to state 11


State 5

    2 function: error ';' •
    4 function_header: error ';' •

    $end      reduce using rule 2 (function)
    $default  reduce using rule 4 (function_header)


State 6

    3 function_header: FUNCTION IDENTIFIER • parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 12

    $default  reduce using rule 7 (parameters)

    parameters  go to state 13
    parameter   go to state 14


State 7

    0 $accept: function $end •

    $default  accept


State 8

   10 variable_declarations: error • ';'

    ';'  shift, and go to state 15


State 9

   15 variable: IDENTIFIER • ':' type IS statement ';'
   16         | IDENTIFIER • ':' LIST OF type IS list ';'

    ':'  shift, and go to state 16


State 10

    1 function: function_header variable_declarations • body

    BEGIN_  shift, and go to state 17

    body  go to state 18


State 11

    9 variable_declarations: variable • variable_declarations

    error       shift, and go to state 8
    IDENTIFIER  shift, and go to state 9

    BEGIN_  reduce using rule 11 (variable_declarations)

    variable_declarations  go to state 19
    variable               go to state 11


State 12

    8 parameter: IDENTIFIER • ':' type

    ':'  shift, and go to state 20


State 13

    3 function_header: FUNCTION IDENTIFIER parameters • RETURNS type ';'

    RETURNS  shift, and go to state 21


State 14

    5 parameters: parameter •
    6           | parameter • ',' parameters

    ','  shift, and go to state 22

    $default  reduce using rule 5 (parameters)


State 15

   10 variable_declarations: error ';' •

    $default  reduce using rule 10 (variable_declarations)


State 16

   15 variable: IDENTIFIER ':' • type IS statement ';'
   16         | IDENTIFIER ':' • LIST OF type IS list ';'

    REAL       shift, and go to state 23
    CHARACTER  shift, and go to state 24
    INTEGER    shift, and go to state 25
    LIST       shift, and go to state 26

    type  go to state 27


State 17

   20 body: BEGIN_ • statement_ END ';'

    error         shift, and go to state 28
    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    NEGOP         shift, and go to state 33
    SUBOP         shift, and go to state 34
    SWITCH        shift, and go to state 35
    WHEN          shift, and go to state 36
    IF            shift, and go to state 37
    FOLD          shift, and go to state 38
    '('           shift, and go to state 39

    statement_  go to state 40
    statement   go to state 41
    expression  go to state 42
    term        go to state 43
    power       go to state 44
    unary       go to state 45
    primary     go to state 46


State 18

    1 function: function_header variable_declarations body •

    $default  reduce using rule 1 (function)


State 19

    9 variable_declarations: variable variable_declarations •

    $default  reduce using rule 9 (variable_declarations)


State 20

    8 parameter: IDENTIFIER ':' • type

    REAL       shift, and go to state 23
    CHARACTER  shift, and go to state 24
    INTEGER    shift, and go to state 25

    type  go to state 47


State 21

    3 function_header: FUNCTION IDENTIFIER parameters RETURNS • type ';'

    REAL       shift, and go to state 23
    CHARACTER  shift, and go to state 24
    INTEGER    shift, and go to state 25

    type  go to state 48


State 22

    6 parameters: parameter ',' • parameters

    IDENTIFIER  shift, and go to state 12

    $default  reduce using rule 7 (parameters)

    parameters  go to state 49
    parameter   go to state 14


State 23

   14 type: REAL •

    $default  reduce using rule 14 (type)


State 24

   13 type: CHARACTER •

    $default  reduce using rule 13 (type)


State 25

   12 type: INTEGER •

    $default  reduce using rule 12 (type)


State 26

   16 variable: IDENTIFIER ':' LIST • OF type IS list ';'

    OF  shift, and go to state 50


State 27

   15 variable: IDENTIFIER ':' type • IS statement ';'

    IS  shift, and go to state 51


State 28

   22 statement_: error • ';'

    ';'  shift, and go to state 52


State 29

   65 primary: IDENTIFIER • '(' expression ')'
   66        | IDENTIFIER •

    '('  shift, and go to state 53

    $default  reduce using rule 66 (primary)


State 30

   62 primary: INT_LITERAL •

    $default  reduce using rule 62 (primary)


State 31

   63 primary: CHAR_LITERAL •

    $default  reduce using rule 63 (primary)


State 32

   64 primary: REAL_LITERAL •

    $default  reduce using rule 64 (primary)


State 33

   61 primary: NEGOP • primary

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    NEGOP         shift, and go to state 33
    '('           shift, and go to state 39

    primary  go to state 54


State 34

   59 unary: SUBOP • unary

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    NEGOP         shift, and go to state 33
    SUBOP         shift, and go to state 34
    '('           shift, and go to state 39

    unary    go to state 55
    primary  go to state 46


State 35

   26 statement: SWITCH • expression IS case OTHERS ARROW statement ';' ENDSWITCH
   27          | SWITCH • expression IS error ENDSWITCH

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    NEGOP         shift, and go to state 33
    SUBOP         shift, and go to state 34
    '('           shift, and go to state 39

    expression  go to state 56
    term        go to state 43
    power       go to state 44
    unary       go to state 45
    primary     go to state 46


State 36

   24 statement: WHEN • condition ',' expression ':' expression
   25          | WHEN • error ';'

    error         shift, and go to state 57
    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    NOTOP         shift, and go to state 58
    NEGOP         shift, and go to state 33
    SUBOP         shift, and go to state 34
    '('           shift, and go to state 59

    condition      go to state 60
    and_condition  go to state 61
    not_condition  go to state 62
    relation       go to state 63
    expression     go to state 64
    term           go to state 43
    power          go to state 44
    unary          go to state 45
    primary        go to state 46


State 37

   28 statement: IF • condition THEN statement ';' ELSIF_declaration ELSE statement ';' ENDIF

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    NOTOP         shift, and go to state 58
    NEGOP         shift, and go to state 33
    SUBOP         shift, and go to state 34
    '('           shift, and go to state 59

    condition      go to state 65
    and_condition  go to state 61
    not_condition  go to state 62
    relation       go to state 63
    expression     go to state 64
    term           go to state 43
    power          go to state 44
    unary          go to state 45
    primary        go to state 46


State 38

   29 statement: FOLD • direction operator list_choice ENDFOLD

    LEFT   shift, and go to state 66
    RIGHT  shift, and go to state 67

    direction  go to state 68


State 39

   67 primary: '(' • expressions ')'

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    NEGOP         shift, and go to state 33
    SUBOP         shift, and go to state 34
    '('           shift, and go to state 39

    expressions  go to state 69
    expression   go to state 70
    term         go to state 43
    power        go to state 44
    unary        go to state 45
    primary      go to state 46


State 40

   20 body: BEGIN_ statement_ • END ';'

    END  shift, and go to state 71


State 41

   21 statement_: statement • ';'

    ';'  shift, and go to state 72


State 42

   23 statement: expression •
   50 expression: expression • ADDOP term
   51           | expression • SUBOP term

    ADDOP  shift, and go to state 73
    SUBOP  shift, and go to state 74

    $default  reduce using rule 23 (statement)


State 43

   52 expression: term •
   53 term: term • MULOP power
   54     | term • DIVOP power
   55     | term • MODOP power

    MULOP  shift, and go to state 75
    MODOP  shift, and go to state 76
    DIVOP  shift, and go to state 77

    $default  reduce using rule 52 (expression)


State 44

   56 term: power •
   57 power: power • EXPOP unary

    EXPOP  shift, and go to state 78

    $default  reduce using rule 56 (term)


State 45

   58 power: unary •

    $default  reduce using rule 58 (power)


State 46

   60 unary: primary •

    $default  reduce using rule 60 (unary)


State 47

    8 parameter: IDENTIFIER ':' type •

    $default  reduce using rule 8 (parameter)


State 48

    3 function_header: FUNCTION IDENTIFIER parameters RETURNS type • ';'

    ';'  shift, and go to state 79


State 49

    6 parameters: parameter ',' parameters •

    $default  reduce using rule 6 (parameters)


State 50

   16 variable: IDENTIFIER ':' LIST OF • type IS list ';'

    REAL       shift, and go to state 23
    CHARACTER  shift, and go to state 24
    INTEGER    shift, and go to state 25

    type  go to state 80


State 51

   15 variable: IDENTIFIER ':' type IS • statement ';'

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    NEGOP         shift, and go to state 33
    SUBOP         shift, and go to state 34
    SWITCH        shift, and go to state 35
    WHEN          shift, and go to state 36
    IF            shift, and go to state 37
    FOLD          shift, and go to state 38
    '('           shift, and go to state 39

    statement   go to state 81
    expression  go to state 42
    term        go to state 43
    power       go to state 44
    unary       go to state 45
    primary     go to state 46


State 52

   22 statement_: error ';' •

    $default  reduce using rule 22 (statement_)


State 53

   65 primary: IDENTIFIER '(' • expression ')'

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    NEGOP         shift, and go to state 33
    SUBOP         shift, and go to state 34
    '('           shift, and go to state 39

    expression  go to state 82
    term        go to state 43
    power       go to state 44
    unary       go to state 45
    primary     go to state 46


State 54

   61 primary: NEGOP primary •

    $default  reduce using rule 61 (primary)


State 55

   59 unary: SUBOP unary •

    $default  reduce using rule 59 (unary)


State 56

   26 statement: SWITCH expression • IS case OTHERS ARROW statement ';' ENDSWITCH
   27          | SWITCH expression • IS error ENDSWITCH
   50 expression: expression • ADDOP term
   51           | expression • SUBOP term

    ADDOP  shift, and go to state 73
    SUBOP  shift, and go to state 74
    IS     shift, and go to state 83


State 57

   25 statement: WHEN error • ';'

    ';'  shift, and go to state 84


State 58

   46 not_condition: NOTOP • not_condition

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    NOTOP         shift, and go to state 58
    NEGOP         shift, and go to state 33
    SUBOP         shift, and go to state 34
    '('           shift, and go to state 59

    not_condition  go to state 85
    relation       go to state 63
    expression     go to state 64
    term           go to state 43
    power          go to state 44
    unary          go to state 45
    primary        go to state 46


State 59

   48 relation: '(' • condition ')'
   67 primary: '(' • expressions ')'

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    NOTOP         shift, and go to state 58
    NEGOP         shift, and go to state 33
    SUBOP         shift, and go to state 34
    '('           shift, and go to state 59

    expressions    go to state 69
    condition      go to state 86
    and_condition  go to state 61
    not_condition  go to state 62
    relation       go to state 63
    expression     go to state 87
    term           go to state 43
    power          go to state 44
    unary          go to state 45
    primary        go to state 46


State 60

   24 statement: WHEN condition • ',' expression ':' expression
   42 condition: condition • OROP and_condition

    OROP  shift, and go to state 88
    ','   shift, and go to state 89


State 61

   43 condition: and_condition •
   44 and_condition: and_condition • ANDOP not_condition

    ANDOP  shift, and go to state 90

    $default  reduce using rule 43 (condition)


State 62

   45 and_condition: not_condition •

    $default  reduce using rule 45 (and_condition)


State 63

   47 not_condition: relation •

    $default  reduce using rule 47 (not_condition)


State 64

   49 relation: expression • RELOP expression
   50 expression: expression • ADDOP term
   51           | expression • SUBOP term

    ADDOP  shift, and go to state 73
    RELOP  shift, and go to state 91
    SUBOP  shift, and go to state 74


State 65

   28 statement: IF condition • THEN statement ';' ELSIF_declaration ELSE statement ';' ENDIF
   42 condition: condition • OROP and_condition

    OROP  shift, and go to state 88
    THEN  shift, and go to state 92


State 66

   32 direction: LEFT •

    $default  reduce using rule 32 (direction)


State 67

   33 direction: RIGHT •

    $default  reduce using rule 33 (direction)


State 68

   29 statement: FOLD direction • operator list_choice ENDFOLD

    ADDOP  shift, and go to state 93
    MULOP  shift, and go to state 94
    SUBOP  shift, and go to state 95

    operator  go to state 96


State 69

   18 expressions: expressions • ',' expression
   67 primary: '(' expressions • ')'

    ','  shift, and go to state 97
    ')'  shift, and go to state 98


State 70

   19 expressions: expression •
   50 expression: expression • ADDOP term
   51           | expression • SUBOP term

    ADDOP  shift, and go to state 73
    SUBOP  shift, and go to state 74

    $default  reduce using rule 19 (expressions)


State 71

   20 body: BEGIN_ statement_ END • ';'

    ';'  shift, and go to state 99


State 72

   21 statement_: statement ';' •

    $default  reduce using rule 21 (statement_)


State 73

   50 expression: expression ADDOP • term

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    NEGOP         shift, and go to state 33
    SUBOP         shift, and go to state 34
    '('           shift, and go to state 39

    term     go to state 100
    power    go to state 44
    unary    go to state 45
    primary  go to state 46


State 74

   51 expression: expression SUBOP • term

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    NEGOP         shift, and go to state 33
    SUBOP         shift, and go to state 34
    '('           shift, and go to state 39

    term     go to state 101
    power    go to state 44
    unary    go to state 45
    primary  go to state 46


State 75

   53 term: term MULOP • power

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    NEGOP         shift, and go to state 33
    SUBOP         shift, and go to state 34
    '('           shift, and go to state 39

    power    go to state 102
    unary    go to state 45
    primary  go to state 46


State 76

   55 term: term MODOP • power

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    NEGOP         shift, and go to state 33
    SUBOP         shift, and go to state 34
    '('           shift, and go to state 39

    power    go to state 103
    unary    go to state 45
    primary  go to state 46


State 77

   54 term: term DIVOP • power

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    NEGOP         shift, and go to state 33
    SUBOP         shift, and go to state 34
    '('           shift, and go to state 39

    power    go to state 104
    unary    go to state 45
    primary  go to state 46


State 78

   57 power: power EXPOP • unary

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    NEGOP         shift, and go to state 33
    SUBOP         shift, and go to state 34
    '('           shift, and go to state 39

    unary    go to state 105
    primary  go to state 46


State 79

    3 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';' •

    $default  reduce using rule 3 (function_header)


State 80

   16 variable: IDENTIFIER ':' LIST OF type • IS list ';'

    IS  shift, and go to state 106


State 81

   15 variable: IDENTIFIER ':' type IS statement • ';'

    ';'  shift, and go to state 107


State 82

   50 expression: expression • ADDOP term
   51           | expression • SUBOP term
   65 primary: IDENTIFIER '(' expression • ')'

    ADDOP  shift, and go to state 73
    SUBOP  shift, and go to state 74
    ')'    shift, and go to state 108


State 83

   26 statement: SWITCH expression IS • case OTHERS ARROW statement ';' ENDSWITCH
   27          | SWITCH expression IS • error ENDSWITCH

    error  shift, and go to state 109
    CASE   shift, and go to state 110

    OTHERS  reduce using rule 40 (case)

    case  go to state 111


State 84

   25 statement: WHEN error ';' •

    $default  reduce using rule 25 (statement)


State 85

   46 not_condition: NOTOP not_condition •

    $default  reduce using rule 46 (not_condition)


State 86

   42 condition: condition • OROP and_condition
   48 relation: '(' condition • ')'

    OROP  shift, and go to state 88
    ')'   shift, and go to state 112


State 87

   19 expressions: expression •
   49 relation: expression • RELOP expression
   50 expression: expression • ADDOP term
   51           | expression • SUBOP term

    ADDOP  shift, and go to state 73
    RELOP  shift, and go to state 91
    SUBOP  shift, and go to state 74

    $default  reduce using rule 19 (expressions)


State 88

   42 condition: condition OROP • and_condition

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    NOTOP         shift, and go to state 58
    NEGOP         shift, and go to state 33
    SUBOP         shift, and go to state 34
    '('           shift, and go to state 59

    and_condition  go to state 113
    not_condition  go to state 62
    relation       go to state 63
    expression     go to state 64
    term           go to state 43
    power          go to state 44
    unary          go to state 45
    primary        go to state 46


State 89

   24 statement: WHEN condition ',' • expression ':' expression

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    NEGOP         shift, and go to state 33
    SUBOP         shift, and go to state 34
    '('           shift, and go to state 39

    expression  go to state 114
    term        go to state 43
    power       go to state 44
    unary       go to state 45
    primary     go to state 46


State 90

   44 and_condition: and_condition ANDOP • not_condition

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    NOTOP         shift, and go to state 58
    NEGOP         shift, and go to state 33
    SUBOP         shift, and go to state 34
    '('           shift, and go to state 59

    not_condition  go to state 115
    relation       go to state 63
    expression     go to state 64
    term           go to state 43
    power          go to state 44
    unary          go to state 45
    primary        go to state 46


State 91

   49 relation: expression RELOP • expression

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    NEGOP         shift, and go to state 33
    SUBOP         shift, and go to state 34
    '('           shift, and go to state 39

    expression  go to state 116
    term        go to state 43
    power       go to state 44
    unary       go to state 45
    primary     go to state 46


State 92

   28 statement: IF condition THEN • statement ';' ELSIF_declaration ELSE statement ';' ENDIF

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    NEGOP         shift, and go to state 33
    SUBOP         shift, and go to state 34
    SWITCH        shift, and go to state 35
    WHEN          shift, and go to state 36
    IF            shift, and go to state 37
    FOLD          shift, and go to state 38
    '('           shift, and go to state 39

    statement   go to state 117
    expression  go to state 42
    term        go to state 43
    power       go to state 44
    unary       go to state 45
    primary     go to state 46


State 93

   34 operator: ADDOP •

    $default  reduce using rule 34 (operator)


State 94

   35 operator: MULOP •

    $default  reduce using rule 35 (operator)


State 95

   36 operator: SUBOP •

    $default  reduce using rule 36 (operator)


State 96

   29 statement: FOLD direction operator • list_choice ENDFOLD

    IDENTIFIER  shift, and go to state 118
    '('         shift, and go to state 119

    list         go to state 120
    list_choice  go to state 121


State 97

   18 expressions: expressions ',' • expression

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    NEGOP         shift, and go to state 33
    SUBOP         shift, and go to state 34
    '('           shift, and go to state 39

    expression  go to state 122
    term        go to state 43
    power       go to state 44
    unary       go to state 45
    primary     go to state 46


State 98

   67 primary: '(' expressions ')' •

    $default  reduce using rule 67 (primary)


State 99

   20 body: BEGIN_ statement_ END ';' •

    $default  reduce using rule 20 (body)


State 100

   50 expression: expression ADDOP term •
   53 term: term • MULOP power
   54     | term • DIVOP power
   55     | term • MODOP power

    MULOP  shift, and go to state 75
    MODOP  shift, and go to state 76
    DIVOP  shift, and go to state 77

    $default  reduce using rule 50 (expression)


State 101

   51 expression: expression SUBOP term •
   53 term: term • MULOP power
   54     | term • DIVOP power
   55     | term • MODOP power

    MULOP  shift, and go to state 75
    MODOP  shift, and go to state 76
    DIVOP  shift, and go to state 77

    $default  reduce using rule 51 (expression)


State 102

   53 term: term MULOP power •
   57 power: power • EXPOP unary

    EXPOP  shift, and go to state 78

    $default  reduce using rule 53 (term)


State 103

   55 term: term MODOP power •
   57 power: power • EXPOP unary

    EXPOP  shift, and go to state 78

    $default  reduce using rule 55 (term)


State 104

   54 term: term DIVOP power •
   57 power: power • EXPOP unary

    EXPOP  shift, and go to state 78

    $default  reduce using rule 54 (term)


State 105

   57 power: power EXPOP unary •

    $default  reduce using rule 57 (power)


State 106

   16 variable: IDENTIFIER ':' LIST OF type IS • list ';'

    '('  shift, and go to state 119

    list  go to state 123


State 107

   15 variable: IDENTIFIER ':' type IS statement ';' •

    $default  reduce using rule 15 (variable)


State 108

   65 primary: IDENTIFIER '(' expression ')' •

    $default  reduce using rule 65 (primary)


State 109

   27 statement: SWITCH expression IS error • ENDSWITCH

    ENDSWITCH  shift, and go to state 124


State 110

   39 case: CASE • INT_LITERAL ARROW statement ';'
   41     | CASE • error ';'

    error        shift, and go to state 125
    INT_LITERAL  shift, and go to state 126


State 111

   26 statement: SWITCH expression IS case • OTHERS ARROW statement ';' ENDSWITCH

    OTHERS  shift, and go to state 127


State 112

   48 relation: '(' condition ')' •

    $default  reduce using rule 48 (relation)


State 113

   42 condition: condition OROP and_condition •
   44 and_condition: and_condition • ANDOP not_condition

    ANDOP  shift, and go to state 90

    $default  reduce using rule 42 (condition)


State 114

   24 statement: WHEN condition ',' expression • ':' expression
   50 expression: expression • ADDOP term
   51           | expression • SUBOP term

    ADDOP  shift, and go to state 73
    SUBOP  shift, and go to state 74
    ':'    shift, and go to state 128


State 115

   44 and_condition: and_condition ANDOP not_condition •

    $default  reduce using rule 44 (and_condition)


State 116

   49 relation: expression RELOP expression •
   50 expression: expression • ADDOP term
   51           | expression • SUBOP term

    ADDOP  shift, and go to state 73
    SUBOP  shift, and go to state 74

    $default  reduce using rule 49 (relation)


State 117

   28 statement: IF condition THEN statement • ';' ELSIF_declaration ELSE statement ';' ENDIF

    ';'  shift, and go to state 129


State 118

   38 list_choice: IDENTIFIER •

    $default  reduce using rule 38 (list_choice)


State 119

   17 list: '(' • expressions ')'

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    NEGOP         shift, and go to state 33
    SUBOP         shift, and go to state 34
    '('           shift, and go to state 39

    expressions  go to state 130
    expression   go to state 70
    term         go to state 43
    power        go to state 44
    unary        go to state 45
    primary      go to state 46


State 120

   37 list_choice: list •

    $default  reduce using rule 37 (list_choice)


State 121

   29 statement: FOLD direction operator list_choice • ENDFOLD

    ENDFOLD  shift, and go to state 131


State 122

   18 expressions: expressions ',' expression •
   50 expression: expression • ADDOP term
   51           | expression • SUBOP term

    ADDOP  shift, and go to state 73
    SUBOP  shift, and go to state 74

    $default  reduce using rule 18 (expressions)


State 123

   16 variable: IDENTIFIER ':' LIST OF type IS list • ';'

    ';'  shift, and go to state 132


State 124

   27 statement: SWITCH expression IS error ENDSWITCH •

    $default  reduce using rule 27 (statement)


State 125

   41 case: CASE error • ';'

    ';'  shift, and go to state 133


State 126

   39 case: CASE INT_LITERAL • ARROW statement ';'

    ARROW  shift, and go to state 134


State 127

   26 statement: SWITCH expression IS case OTHERS • ARROW statement ';' ENDSWITCH

    ARROW  shift, and go to state 135


State 128

   24 statement: WHEN condition ',' expression ':' • expression

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    NEGOP         shift, and go to state 33
    SUBOP         shift, and go to state 34
    '('           shift, and go to state 39

    expression  go to state 136
    term        go to state 43
    power       go to state 44
    unary       go to state 45
    primary     go to state 46


State 129

   28 statement: IF condition THEN statement ';' • ELSIF_declaration ELSE statement ';' ENDIF

    ELSIF  shift, and go to state 137

    $default  reduce using rule 31 (ELSIF_declaration)

    ELSIF_declaration  go to state 138


State 130

   17 list: '(' expressions • ')'
   18 expressions: expressions • ',' expression

    ','  shift, and go to state 97
    ')'  shift, and go to state 139


State 131

   29 statement: FOLD direction operator list_choice ENDFOLD •

    $default  reduce using rule 29 (statement)


State 132

   16 variable: IDENTIFIER ':' LIST OF type IS list ';' •

    $default  reduce using rule 16 (variable)


State 133

   41 case: CASE error ';' •

    $default  reduce using rule 41 (case)


State 134

   39 case: CASE INT_LITERAL ARROW • statement ';'

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    NEGOP         shift, and go to state 33
    SUBOP         shift, and go to state 34
    SWITCH        shift, and go to state 35
    WHEN          shift, and go to state 36
    IF            shift, and go to state 37
    FOLD          shift, and go to state 38
    '('           shift, and go to state 39

    statement   go to state 140
    expression  go to state 42
    term        go to state 43
    power       go to state 44
    unary       go to state 45
    primary     go to state 46


State 135

   26 statement: SWITCH expression IS case OTHERS ARROW • statement ';' ENDSWITCH

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    NEGOP         shift, and go to state 33
    SUBOP         shift, and go to state 34
    SWITCH        shift, and go to state 35
    WHEN          shift, and go to state 36
    IF            shift, and go to state 37
    FOLD          shift, and go to state 38
    '('           shift, and go to state 39

    statement   go to state 141
    expression  go to state 42
    term        go to state 43
    power       go to state 44
    unary       go to state 45
    primary     go to state 46


State 136

   24 statement: WHEN condition ',' expression ':' expression •
   50 expression: expression • ADDOP term
   51           | expression • SUBOP term

    ADDOP  shift, and go to state 73
    SUBOP  shift, and go to state 74

    $default  reduce using rule 24 (statement)


State 137

   30 ELSIF_declaration: ELSIF • condition THEN statement ';' ELSIF_declaration

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    NOTOP         shift, and go to state 58
    NEGOP         shift, and go to state 33
    SUBOP         shift, and go to state 34
    '('           shift, and go to state 59

    condition      go to state 142
    and_condition  go to state 61
    not_condition  go to state 62
    relation       go to state 63
    expression     go to state 64
    term           go to state 43
    power          go to state 44
    unary          go to state 45
    primary        go to state 46


State 138

   28 statement: IF condition THEN statement ';' ELSIF_declaration • ELSE statement ';' ENDIF

    ELSE  shift, and go to state 143


State 139

   17 list: '(' expressions ')' •

    $default  reduce using rule 17 (list)


State 140

   39 case: CASE INT_LITERAL ARROW statement • ';'

    ';'  shift, and go to state 144


State 141

   26 statement: SWITCH expression IS case OTHERS ARROW statement • ';' ENDSWITCH

    ';'  shift, and go to state 145


State 142

   30 ELSIF_declaration: ELSIF condition • THEN statement ';' ELSIF_declaration
   42 condition: condition • OROP and_condition

    OROP  shift, and go to state 88
    THEN  shift, and go to state 146


State 143

   28 statement: IF condition THEN statement ';' ELSIF_declaration ELSE • statement ';' ENDIF

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    NEGOP         shift, and go to state 33
    SUBOP         shift, and go to state 34
    SWITCH        shift, and go to state 35
    WHEN          shift, and go to state 36
    IF            shift, and go to state 37
    FOLD          shift, and go to state 38
    '('           shift, and go to state 39

    statement   go to state 147
    expression  go to state 42
    term        go to state 43
    power       go to state 44
    unary       go to state 45
    primary     go to state 46


State 144

   39 case: CASE INT_LITERAL ARROW statement ';' •

    $default  reduce using rule 39 (case)


State 145

   26 statement: SWITCH expression IS case OTHERS ARROW statement ';' • ENDSWITCH

    ENDSWITCH  shift, and go to state 148


State 146

   30 ELSIF_declaration: ELSIF condition THEN • statement ';' ELSIF_declaration

    IDENTIFIER    shift, and go to state 29
    INT_LITERAL   shift, and go to state 30
    CHAR_LITERAL  shift, and go to state 31
    REAL_LITERAL  shift, and go to state 32
    NEGOP         shift, and go to state 33
    SUBOP         shift, and go to state 34
    SWITCH        shift, and go to state 35
    WHEN          shift, and go to state 36
    IF            shift, and go to state 37
    FOLD          shift, and go to state 38
    '('           shift, and go to state 39

    statement   go to state 149
    expression  go to state 42
    term        go to state 43
    power       go to state 44
    unary       go to state 45
    primary     go to state 46


State 147

   28 statement: IF condition THEN statement ';' ELSIF_declaration ELSE statement • ';' ENDIF

    ';'  shift, and go to state 150


State 148

   26 statement: SWITCH expression IS case OTHERS ARROW statement ';' ENDSWITCH •

    $default  reduce using rule 26 (statement)


State 149

   30 ELSIF_declaration: ELSIF condition THEN statement • ';' ELSIF_declaration

    ';'  shift, and go to state 151


State 150

   28 statement: IF condition THEN statement ';' ELSIF_declaration ELSE statement ';' • ENDIF

    ENDIF  shift, and go to state 152


State 151

   30 ELSIF_declaration: ELSIF condition THEN statement ';' • ELSIF_declaration

    ELSIF  shift, and go to state 137

    $default  reduce using rule 31 (ELSIF_declaration)

    ELSIF_declaration  go to state 153


State 152

   28 statement: IF condition THEN statement ';' ELSIF_declaration ELSE statement ';' ENDIF •

    $default  reduce using rule 28 (statement)


State 153

   30 ELSIF_declaration: ELSIF condition THEN statement ';' ELSIF_declaration •

    $default  reduce using rule 30 (ELSIF_declaration)
